CREATE procedure [rep].[023_bld_Recreate_LoadProcs]  @tgt_table_name VARCHAR(255) = NULL
as
/*
Developed by:			metro
Description:			(Re)Create Stored Procedures to load data into [generated] 


	examples:
	exec  [rep].[023_bld_Recreate_LoadProcs]

	exec  [rep].[023_bld_Recreate_LoadProcs] @tgt_table_name = 'Schema'
						

Change log:
Date					Author				Description
20220915 00:00			K. Vermeij			Initial version
*/
declare @LogProcName varchar(max) = '023_bld_Recreate_LoadProcs'
declare @LogNote varchar(max) = '(Re)Create Stored Procedures to load data into [bld] '
declare @LogSQL varchar(max)
declare @SrcSchema varchar(max) = 'bld'
declare @TgtSchema varchar(max) = 'bld'
declare @SmartLoad varchar(max) = '0'
declare @LB varchar(max) = char(10) + char(9)
-- variables for the loop
declare @CounterNr integer
declare @MaxNr integer
declare @sql1 varchar(max)
declare @sql2 varchar(max)
declare @sql2a varchar(max)
declare @sql2b varchar(max)
declare @sql2c varchar(max)
declare @LongSql varchar(max)
declare @SrcDataset varchar(max)
declare @TableName varchar(max)
declare @RoutineNameFull varchar(max)
declare @RoutineNameShort varchar(max)
declare @Msg varchar(max)

if OBJECT_ID('tempdb..#BuildProcs') is not null
	drop table #BuildProcs;

with base
as (
	select table_catalog = t.[TABLE_CATALOG]
		,src_table_schema = t.[TABLE_SCHEMA]
		,src_table_name = t.[TABLE_NAME]
		,src_table_type = t.[TABLE_TYPE]
		,tgt_table_name = rep.[GetNamePart](replace(t.[TABLE_NAME], 'tr_', ''), 2)
		,Dataset = Replace(t.[TABLE_NAME], 'tr_', '')
		,RowNum = ROW_Number() over (
			order by t.[TABLE_NAME]
			)
		,SmartLoad = iif(c.column_name = 'mta_RecType', '1', '0')
	from [INFORMATION_SCHEMA].[TABLES] t
	left join [INFORMATION_SCHEMA].[COLUMNS] c on c.TABLE_SCHEMA = t.[TABLE_SCHEMA]
		and c.TABLE_NAme = t.[TABLE_NAME]
		and c.column_name = 'mta_RecType'
	where 1 = 1
		and TABLE_TYPE = 'VIEW'
		and left(t.[TABLE_NAME], 3) = 'tr_'
		and t.TABLE_SCHEMA = @SrcSchema
		and ( rep.[GetNamePart](replace(t.[TABLE_NAME], 'tr_', ''), 2) = @tgt_table_name or @tgt_table_name is null)
	)
select *
into #BuildProcs
from base

select @CounterNr = min(RowNum)
	,@MaxNr = max(RowNum)
from #BuildProcs

while (
		@CounterNr is not null
		and @CounterNr <= @MaxNr
		)
begin
	select @TableName = src.tgt_table_name
		,@SrcDataset = src.src_table_name
		,@SmartLoad = src.SmartLoad
		,@RoutineNameShort = 'load_' + src.Dataset
		,@RoutineNameFull = '[' + @TgtSchema + '].[load_' + src.Dataset + ']'
		,@sql1 = 'if exists(select * from INFORMATION_SCHEMA.[ROUTINES] where [ROUTINE_SCHEMA] = ''' + @TgtSchema + ''' and [ROUTINE_NAME] =  ''' + @RoutineNameShort + ''')' + char(10) + 'drop procedure ' + @RoutineNameFull + ';'
		,@sql2a = 
					  @LB + 'create proc ' + @RoutineNameFull + ' as' 
					+ @LB + '/*' 
					+ @LB + 'Proc is generated by	: metro' 
					+ @LB + 'Generated at			: ' + convert(varchar(19), getdate(), 121) 
					+ @LB + iif(@SmartLoad = 1, 'makes use of Smartload!', '') 
					+ @LB + 'exec ' + @RoutineNameFull + '' + '*/' + char(10) 
					+ @LB 
					+ @LB + 'Declare @RoutineName	varchar(8000)	= ''' + @RoutineNameShort + '''' 
					+ @LB + 'Declare @StartDateTime	datetime2		=  getutcdate()' 
					+ @LB + 'Declare @EndDateTime	datetime2		' 
					+ @LB + 'Declare @Duration		bigint' + char(10) + char(10) + char(10) 
					+ @LB + '-- Create a helper temp table'
					+ @LB + 'If OBJECT_ID(''tempdb..#' + src.Dataset + ''') IS NOT NULL ' 
					+ @LB + 'Drop Table #' + src.Dataset + ' ;' 
					+ @LB + 'Print ''-- create temp table:''' 
					+ @LB + 'Select' 
					+ @LB + '  mta_BK'	+ char(9) + char(9) + '= src.[BK]' 
					+ @LB + ', mta_BKH' + char(9) + char(9) + '= Convert(char(64),(Hashbytes(''sha2_512'',upper(src.BK) )),2)' 
					+ @LB + ', mta_RH'	+ char(9) + char(9) + '= Convert(char(64),(Hashbytes(''sha2_512'',upper('
					+ @LB + char(9) + char(9) + char(9) + char(9) + char(9) + char(9) + char(9) + STRING_AGG('ISNULL(Cast(src.[' + c.[COLUMN_NAME] + '] as varchar(8000)),''-'') ', '+''|''+') WITHIN
							group (
									order by src.tgt_table_name
										,c.[ORDINAL_POSITION] asc
									)
									+ @LB + char(9) + char(9) + char(9) + char(9) + char(9) + char(9) + '))),2)'
									+ @LB + ', mta_Source' + char(9) + '= ''[' + @TgtSchema + '].[' + src.src_table_name + ']''' + @LB + ', mta_RecType' + char(9) + '= ' + iif(@SmartLoad = 1, 'diff.RecType', 'case 
												when tgt.[BK] is null then 1
												when tgt.[mta_RH] !=  Convert(char(64),(Hashbytes(''sha2_512'',upper(' + STRING_AGG('ISNULL(Cast(src.[' + c.[COLUMN_NAME] + '] as varchar(8000)),''-'') ', '+''|''+') WITHIN group (
										order by src.tgt_table_name
											,c.[ORDINAL_POSITION] asc
										) + '))),2)' 
								+ @LB + char(9) + char(9) + char(9) + char(9) + char(9) + 'then 0' 
								+ @LB + char(9) + char(9) + char(9) + char(9) + char(9) + 'else -99 end' 
								+ @LB	) 
					+ @LB + 'Into #' + src.Dataset 
					+ @LB + 'From [' + @TgtSchema + '].[' + src.src_table_name + '] src' 
					+ @LB + 'Left join [' + @TgtSchema + '].[vw_' + src.tgt_table_name + '] tgt on src.[BK] = tgt.[BK]' 
					+ @LB + iif(@SmartLoad = 1, 'join [bld].[vw_' + src.tgt_table_name + 'SmartLoad] diff on diff.code =  src.code', '') 
					+ @LB + iif(@SmartLoad = 1, 'where 1=1  and  cast(diff.RecType as int) > -99', '') 
					+ @LB 
					+ @LB + 'Create Clustered INDEX [IX_' + src.src_table_name + '] ON #' + src.Dataset + '( [mta_BKH] ASC,[mta_RH] ASC)' 
					+ @LB 
					+ @LB 
					+ @LB + '--------------------- start loading data' 
					+ @LB 
					+ @LB + 'Print ''-- new records:''' 
					+ @LB 
					+ @LB + 'set @StartDateTime = getdate()' 
					+ @LB 
					+ @LB + 'Insert Into [' + @TgtSchema + '].[' + src.tgt_table_name + ']' 
					+ @LB + '( ' 
					+ @LB + char(9) + STRING_AGG('[' + c.[COLUMN_NAME] + '] ', ',') WITHIN
									group (
											order by src.tgt_table_name
												,c.[ORDINAL_POSITION] asc
											) 
									+ @LB + char(9) + ', [mta_BK], [mta_BKH], [mta_RH], [mta_Source], [mta_RecType]' + ') ' 
									+ @LB + 'select ' 
									+ @LB + char(9) + STRING_AGG('src.[' + c.[COLUMN_NAME] + '] ', ',') WITHIN
									group (
											order by src.tgt_table_name
												,c.[ORDINAL_POSITION] asc
									) 
					+ @LB + char(9) + ', h.[mta_BK], h.[mta_BKH], h.[mta_RH], h.[mta_Source], h.[mta_RecType]' 
					+ @LB + 'From  [' + @SrcSchema + '].[' + src.src_table_name + '] src' 
					+ @LB + 'Join #' + src.Dataset + ' h on h.[mta_BK] = src.[BK]' 
					+ @LB + 'Left Join [' + @TgtSchema + '].[vw_' + src.tgt_table_name + '] tgt on h.[mta_BKH] = tgt.[mta_BKH] ' 
					+ @LB + 'Where 1=1 and cast(h.mta_RecType as int) = 1 and tgt.[mta_BKH] is null' 
					+ @LB
					+ @LB 
					+ @LB + 'set @EndDateTime = getutcdate()'
					+ @LB +
							'exec [aud].[proc_Log_Procedure]  
							@LogAction		= ''INSERT - NEW'', 
							@LogNote		= ''New Records'',
							@LogProcedure	= @RoutineName,
							@LogSQL			= ''Insert Into [' + @TgtSchema + '].[' + src.tgt_table_name + ']'',
							@LogRowCount	= @@ROWCOUNT,
							@Log_TimeStart  = @StartDateTime,
							@Log_TimeEnd    = @EndDateTime;' 
					+ @LB 
					+ @LB + 'Print ''-- changed records:''' 
					+ @LB + 'set @StartDateTime = getdate()' 
					+ @LB 
					+ @LB + char(9) + 'Insert Into [' + @TgtSchema + '].[' + src.tgt_table_name + ']' 
					+ @LB + '( ' 
					+ @LB + char(9) + STRING_AGG('[' + c.[COLUMN_NAME] + '] ', ',') WITHIN
									group (
											order by src.tgt_table_name
												,c.[ORDINAL_POSITION] asc
											) 
					+ @LB + char(9) + ', [mta_BK], [mta_BKH], [mta_RH], [mta_Source], [mta_RecType]' + ') ' 
					+ @LB + 'select ' 
					+ @LB + char(9) + STRING_AGG('src.[' + c.[COLUMN_NAME] + '] ', ',') WITHIN
										group (
												order by src.tgt_table_name
													,c.[ORDINAL_POSITION] asc
												) + char(10) + char(9) + char(9) + ', h.[mta_BK], h.[mta_BKH], h.[mta_RH], h.[mta_Source], h.[mta_RecType]' 
												+ @LB + 'From  [' + @SrcSchema + '].[' + src.src_table_name + '] src'
												+ @LB + 'Join #' + src.Dataset + ' h on h.[mta_BK] = src.[BK]'
												+ @LB + 'Where 1=1 and cast(h.mta_RecType as int) = 0' + char(10) 
												+ @LB 
												+ @LB +
											'set @EndDateTime = getutcdate()'
											+ @LB +
												'exec [aud].[proc_Log_Procedure]  
												@LogAction		= ''INSERT - CHG'', 
												@LogNote		= ''Changed Records'',
												@LogProcedure	= @RoutineName,
												@LogSQL			= ''Insert Into [' + @TgtSchema + '].[' + src.tgt_table_name + ']'',
												@LogRowCount	= @@ROWCOUNT,
												@Log_TimeStart  = @StartDateTime,
												@Log_TimeEnd    = @EndDateTime;' 
												+ @LB 
												+ @LB + 'Print ''-- deleted records:''' 
												+ @LB 
												+ @LB +'set @StartDateTime = getdate()' 
												+ @LB 
												+ @LB + 'Insert Into [' + @TgtSchema + '].[' + src.tgt_table_name + ']' 
												+ @LB 
												+ @LB +'( ' 
												+ @LB 
												+ @LB + char(9) + STRING_AGG('[' + c.[COLUMN_NAME] + '] ', ',') WITHIN
																	group (
																			order by src.tgt_table_name
																				,c.[ORDINAL_POSITION] asc
																			) 
																			+ @LB + char(9) + ', [mta_BK], [mta_BKH], [mta_RH], [mta_Source], [mta_RecType]' + ') ' 
																			+ @LB +'select ' 
																			+ @LB + char(9) + STRING_AGG('src.[' + c.[COLUMN_NAME] + '] ', ',') WITHIN
																	group (
																			order by src.tgt_table_name
																				,c.[ORDINAL_POSITION] asc
																			)
											+ @LB + char(9) + ', src.[mta_BK], src.[mta_BKH], src.[mta_RH], src.[mta_Source], [mta_RecType] = -1' 
											+ @LB + 'From  [' + @TgtSchema + '].[vw_' + src.tgt_table_name + '] src' 
											+ @LB + 'Left Join #' + src.Dataset + ' h on h.[mta_BKH] = src.[mta_BKH] and h.[mta_Source] = src.[mta_Source]' 
											+ @LB + 'Where 1=1 and h.[mta_BKH] is null and  src.mta_Source = ''[' + @TgtSchema + '].[' + src.src_table_name + ']'''
											+ @LB + iif(@SmartLoad = 1, 'and  h.mta_RecType =-1', '') 
											+ @LB 
											+ @LB +
											'set @EndDateTime = getutcdate()'
											+ @LB +
												'exec [aud].[proc_Log_Procedure]  
												@LogAction		= ''INSERT - DEL'', 
												@LogNote		= ''Changed Deleted'',
												@LogProcedure	= @RoutineName,
												@LogSQL			= ''Insert Into [' + @TgtSchema + '].[' + src.tgt_table_name + ']'',
												@LogRowCount	= @@ROWCOUNT,
												@Log_TimeStart  = @StartDateTime,
												@Log_TimeEnd    = @EndDateTime
												;' + @LB + @LB 
		,@sql2b = ''
		,@sql2c = '-- Clean up ...' 
					+ @LB + 'If OBJECT_ID(''tempdb..#' + src.Dataset + ''') IS NOT NULL ' + char(10) + 'Drop Table #' + src.Dataset + ';' 
					+ @LB 
					+ @LB + 'set @EndDateTime =  getutcdate()' 
					+ @LB + 'set @Duration = datediff(ss,@StartDateTime, @EndDateTime)' 
					+ @LB + 'print ''Load "' + @RoutineNameShort + '" took '' +cast(@Duration as varchar(10))+ '' second(s)''' 
					+ @LB 
	--select *
	from #BuildProcs src
	join [INFORMATION_SCHEMA].[COLUMNS] c on c.TABLE_SCHEMA = src.src_table_schema
		and c.TABLE_NAme = src.src_table_name
	where 1 = 1
		and left(C.Column_Name, 3) != 'mta'
		and c.COLUMN_NAME != src.tgt_table_name + 'Id'
		and src.RowNum = @CounterNr
	group by src.src_table_name
		,src.tgt_table_name
		,src.Dataset
		,src.SmartLoad

	-- Drop load procedure
	print (@sql1)

	exec (@sql1)

	set @Msg = 'Drop Load proc ' + @LogProcName

	exec [aud].[proc_Log_Procedure] @LogAction = 'DROP'
		,@LogNote = @Msg
		,@LogProcedure = @LogProcName
		,@LogSQL = @sql1
		,@LogRowCount = 1

	-- create load procedure
	set @LongSql = @sql2a + @sql2b + @sql2c

	exec rep.Helper_LongPrint @string = @LongSql

	exec (@LongSql)

	set @Msg = 'Load proc ' + @LogProcName

	exec [aud].[proc_Log_Procedure] @LogAction = 'CREATE'
		,@LogNote = @Msg
		,@LogProcedure = @LogProcName
		,@LogSQL = @sql2
		,@LogRowCount = 1

	set @CounterNr = @CounterNr + 1
end

set @LogSQL = 'exec ' + @TgtSchema + '.' + @LogProcName

exec [aud].[proc_Log_Procedure] @LogAction = 'INFO'
	,@LogNote = @LogNote
	,@LogProcedure = @LogProcName
	,@LogSQL = @LogSQL
	,@LogRowCount = @MaxNr

-- Cleaning
if OBJECT_ID('tempdb..#BuildProcs') is not null
	drop table #BuildProcs;