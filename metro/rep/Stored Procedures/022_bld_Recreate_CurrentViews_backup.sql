CREATE PROCEDURE [rep].[022_bld_Recreate_CurrentViews_backup]
AS
/*
Developed by:			metro
Description:			(Re)Create views for the current records on the [generated] tables

Change log:
Date					Author				Description
20220915 00:00			K. Vermeij			Initial version
20220917 08:25			K. Vermeij			Add [mta_IsDeleted]
*/
DECLARE @LogProcName varchar(MAX) = '[rep].[022_bld_Recreate_CurrentViews]'
DECLARE @LogNote varchar(MAX) = '(Re)Create views for the current records on the [bld] tables'
DECLARE @LogSQL varchar(MAX)
DECLARE @SrcSchema varchar(MAX) = 'bld'
DECLARE @TgtSchema varchar(MAX) = 'bld'
-- variables for the loop
DECLARE @CounterNr integer
DECLARE @MaxNr integer
DECLARE @sql1 varchar(MAX)
DECLARE @sql2 varchar(MAX)
DECLARE @LongSql varchar(MAX)
DECLARE @TableName varchar(MAX)
DECLARE @Msg varchar(MAX)

IF OBJECT_ID('tempdb..#BuildCurrentViews') IS NOT null
	DROP TABLE #BuildCurrentViews;

WITH base
AS (
	SELECT table_catalog = t.[TABLE_CATALOG]
		,src_table_schema = t.[TABLE_SCHEMA]
		,src_table_name = t.[TABLE_NAME]
		,src_table_type = t.[TABLE_TYPE]
		,tgt_table_name = rep.[GetNamePart](replace(t.[TABLE_NAME], 'tr_', ''), 2)
		,RowNum = ROW_NUMBER() OVER (
			PARTITION BY rep.[GetNamePart](replace(t.[TABLE_NAME], 'tr_', ''), 2) ORDER BY t.[TABLE_NAME]
			)
	FROM [INFORMATION_SCHEMA].[TABLES] t
	WHERE 1 = 1
		AND TABLE_TYPE = 'VIEW'
		AND LEFT(t.[TABLE_NAME], 3) = 'tr_'
		AND t.TABLE_SCHEMA = @SrcSchema
	)
SELECT *
	,ProcessSequence = ROW_NUMBER() OVER (
		ORDER BY tgt_table_name
		)
INTO #BuildCurrentViews
FROM base
WHERE RowNum = 1

SELECT @CounterNr = min(ProcessSequence)
	,@MaxNr = max(ProcessSequence)
FROM #BuildCurrentViews

WHILE (
		@CounterNr IS NOT null
		AND @CounterNr <= @MaxNr
		)
BEGIN
	SELECT @TableName = src.tgt_table_name
		,@sql1
		= 'if exists(select * from INFORMATION_SCHEMA.[TABLES]  v where table_schema = '''
		+ @TgtSchema
		+ ''' and table_name=''vw_'
		+ src.tgt_table_name
		+ ''' and TABLE_TYPE=''VIEW'')'
		+ char(10)
		+ 'drop view ['
		+ @TgtSchema
		+ '].[vw_'
		+ src.tgt_table_name
		+ '];'
		,@sql2
		= 'create view ['
		+ @TgtSchema
		+ '].vw_'
		+ src.tgt_table_name
		+ ' as'
		+ char(10)
		+ '/*'
		+ char(10)
		+ 'View is generated by	: metro'
		+ char(10)
		+ 'Generated at			: '
		+ CONVERT(varchar(19), getdate(), 121)
		+ char(10)
		+ '*/'
		+ char(10)
		+ char(10)
		+ 'With Cur as ('
		+ char(10)
		+ char(9)
		+ 'SELECT '
		+ char(10)
		+ char(9)
		+ char(9)
		+ STRING_AGG('[' + c.[COLUMN_NAME] + ']  as [' + c.[COLUMN_NAME] + ']', ',') WITHIN
	GROUP (
			ORDER BY src.tgt_table_name
				,c.[ORDINAL_POSITION] ASC
			)
			+ char(10)
			+ char(9)
			+ char(9)
			+ ',[mta_RecType], [mta_CreateDate], [mta_Source], [mta_BK], [mta_BKH], [mta_RH]'
			+ char(10)
			+ char(9)
			+ char(9)
			+ '-- Determine latest record based on create date'
			+ char(10)
			+ char(9)
			+ char(9)
			+ ', [mta_CurrentFlag] = Row_Number() Over (Partition By [mta_BKH] Order by [mta_CreateDate] Desc)'
			+ char(10)
			+ char(9)
			+ 'FROM ['
			+ @SrcSchema
			+ '].['
			+ src.tgt_table_name
			+ ']'
			+ char(10)
			+ char(9)
			+ 'WHERE 1=1'
			+ char(10)
			+ char(9)
			+ ')'
			+ 'Select '
			+ char(10)
			+ char(9)
			+ STRING_AGG('[' + c.[COLUMN_NAME] + ']  as [' + c.[COLUMN_NAME] + ']', ',') WITHIN
	GROUP (
			ORDER BY src.tgt_table_name
				,c.[ORDINAL_POSITION] ASC
			)
			+ char(10)
			+ char(9)
			+ '-- Add "Deleted" indicator, the current view shows the latest record even if deleted. This gives the oppurtunity to delete records in the [bld] schema'
			+ char(10)
			+ char(9)
			+ ',[mta_RecType], [mta_CreateDate], [mta_Source], [mta_BK], [mta_BKH], [mta_RH]'
			+ char(10)
			+ char(9)
			+ ', mta_IsDeleted = iif([mta_RecType]=-1,1,0)'
			+ char(10)
			+ 'From Cur'
			+ char(10)
			+ 'Where [mta_CurrentFlag] = 1 and [mta_RecType]>-1'
			+ char(10)
	--select *
	FROM #BuildCurrentViews src
	JOIN [INFORMATION_SCHEMA].[COLUMNS] c ON c.TABLE_SCHEMA = src_table_schema
		AND c.TABLE_NAME = src.tgt_table_name
	WHERE 1 = 1
		AND LEFT(c.[COLUMN_NAME], 3) != 'mta'
		AND src.ProcessSequence = @CounterNr
	GROUP BY src.tgt_table_name

	-- drop views if exists
	PRINT ''
	PRINT (@sql1)

	EXEC (@sql1)

	SET @Msg = 'Drop view bld.vw_' + @TableName

	EXEC [aud].[proc_Log_Procedure] @LogAction = 'DROP'
		,@LogNote = @Msg
		,@LogProcedure = @LogProcName
		,@LogSQL = @sql1
		,@LogRowCount = 1

	-- create views
	PRINT ''

	--Print	(@sql2)
	SET @LongSql = @sql2

	EXEC rep.Helper_LongPrint @string = @LongSql

	EXEC (@LongSql)

	SET @Msg = 'Create view bld.vw_' + @TableName

	EXEC [aud].[proc_Log_Procedure] @LogAction = 'CREATE'
		,@LogNote = @Msg
		,@LogProcedure = @LogProcName
		,@LogSQL = @sql2
		,@LogRowCount = 1

	SET @CounterNr = @CounterNr + 1
END

SET @LogSQL = 'exec ' + @TgtSchema + '.' + @LogProcName

EXEC [aud].[proc_Log_Procedure] @LogAction = 'INFO'
	,@LogNote = @LogNote
	,@LogProcedure = @LogProcName
	,@LogSQL = @LogSQL
	,@LogRowCount = @MaxNr

-- Cleaning
IF OBJECT_ID('tempdb..#BuildCurrentViews') IS NOT null
	DROP TABLE #BuildCurrentViews