

CREATE PROCEDURE [rep].[Helper_adf_Views] @table [varchar] (255)
	,@schemaname [varchar] (255)
	,@envTableStatus [varchar] (20)
	,@envTable [varchar] (20)
	AS
/*
Generated by:			BHR_LANS800@kpn.com

Description:
    This stored procedure generates and executes a dynamic SQL query to select data from a specified table and schema based on the provided environment table status and environment table.

Parameters:
    @table          VARCHAR(255)  -- The name of the table to query.
    @schemaname     VARCHAR(255)  -- The schema name of the table.
    @envTableStatus VARCHAR(20)   -- The status of the environment table to filter the query.
    @envTable       VARCHAR(20)   -- The environment table to filter the query.

Example Usage:
    EXEC [rep].[Helper_adf_Views] @table = 'Connections_Sto_Table', @schemaname = 'adf', @envTableStatus = '-1'
    EXEC [rep].[Helper_adf_Views] @table = '[Dependencies]', @schemaname = '[adf]', @envTableStatus = '1'

Procedure Logic:
    1. Initializes a variable to hold the dynamic SQL query.
    2. Constructs the dynamic SQL query using the provided parameters.
    3. Prints the constructed SQL query for debugging purposes.
    4. Executes the constructed SQL query.

AST:
Procedure: [rep].[Helper_adf_Views]
  Parameters:
    - @table: VARCHAR(255)
    - @schemaname: VARCHAR(255)
    - @envTableStatus: VARCHAR(20)
    - @envTable: VARCHAR(20)
  Variables:
    - @sql: VARCHAR(MAX)
  Logic:
    - Initialize variable to hold dynamic SQL query
    - Construct dynamic SQL query using provided parameters
    - Print constructed SQL query
    - Execute constructed SQL query

Mermaid Diagram:
graph TD
    A[Start] --> B[Initialize variable to hold dynamic SQL query]
    B --> C[Construct dynamic SQL query using provided parameters]
    C --> D[Print constructed SQL query]
    D --> E[Execute constructed SQL query]
    E --> F[End]

History:
Date                Author                      Description
20220922            Martijn van der Lans        Initial version
20220120            Kim Vermeij                 Renamed: @env to @envTableStatus, added @envTable for context of dataset location
*/
BEGIN
	DECLARE @sql VARCHAR(MAX)
	-- Construct the dynamic SQL query
	SET @sql = '
		SELECT * 
        FROM ' + @schemaname + '.' + @table + ' 
        WHERE 1=1
            AND [RepositoryStatusCode] >= ''' + @envTableStatus + '''  
            AND [Environment] = ''' + @envTable + '''  
		
		'
		;
	-- Print the constructed SQL query for debugging purposes
	PRINT (@sql)
	-- Execute the constructed SQL query
	EXEC (@sql)
END