
CREATE proc [bld].[load_110_fileproperties_010_datasetsrc] AS /*
	Proc is generated by	: metro
	Generated at			: 2025-01-06 14:43:27

	exec [bld].[load_110_FileProperties_010_DatasetSrc]*/  DECLARE @routinename varchar(8000) = 'load_110_FileProperties_010_DatasetSrc' DECLARE @startdatetime datetime2 = getutcdate() DECLARE @enddatetime datetime2 DECLARE @duration bigint -- Create a helper temp table
 IF object_id('tempdb..#110_FileProperties_010_DatasetSrc') IS NOT NULL
DROP TABLE # 110_fileproperties_010_datasetsrc ; PRINT '-- create temp table:'
SELECT mta_bk = src.[bk] ,

       mta_bkh = convert(char(64),(hashbytes('sha2_512', upper(src.bk))),2) ,

       mta_rh = convert(char(64),(hashbytes('sha2_512', upper(isnull(cast(src.[bk] AS varchar(8000)), '-') + '|' + isnull(cast(src.[code] AS varchar(8000)), '-') + '|' + isnull(cast(src.[description] AS varchar(8000)), '-') + '|' + isnull(cast(src.[filemask] AS varchar(8000)), '-') + '|' + isnull(cast(src.[filename] AS varchar(8000)), '-') + '|' + isnull(cast(src.[filesystem] AS varchar(8000)), '-') + '|' + isnull(cast(src.[folder] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ispgp] AS varchar(8000)), '-') + '|' + isnull(cast(src.[expectedfilecount] AS varchar(8000)), '-') + '|' + isnull(cast(src.[expectedfilesize] AS varchar(8000)), '-') + '|' + isnull(cast(src.[bk_schedule_fileexpected] AS varchar(8000)), '-') + '|' + isnull(cast(src.[dateinfilenameformat] AS varchar(8000)), '-') + '|' + isnull(cast(src.[dateinfilenamelength] AS varchar(8000)), '-') + '|' + isnull(cast(src.[dateinfilenamestartpos] AS varchar(8000)), '-') + '|' + isnull(cast(src.[dateinfilenameexpression] AS varchar(8000)), '-') + '|' + isnull(cast(src.[testdateinfilename] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_name] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_fileformat] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_columndelimiter] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_rowdelimiter] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_quotecharacter] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_compressionlevel] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_compressiontype] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_enablecdc] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_escapecharacter] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_fileencoding] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_firstrow] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_firstrowasheader] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_filesize] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_threshold] AS varchar(8000)), '-')))),2) ,

       mta_source = '[bld].[tr_110_FileProperties_010_DatasetSrc]' ,

       mta_rectype = CASE
                         WHEN tgt.[bk

            WHEN tgt.[mta_rh] != convert(char(64),(hashbytes('sha2_512', upper(isnull(cast(src.[bk] AS varchar(8000)), '-') + '|' + isnull(cast(src.[code] AS varchar(8000)), '-') + '|' + isnull(cast(src.[description] AS varchar(8000)), '-') + '|' + isnull(cast(src.[filemask] AS varchar(8000)), '-') + '|' + isnull(cast(src.[filename] AS varchar(8000)), '-') + '|' + isnull(cast(src.[filesystem] AS varchar(8000)), '-') + '|' + isnull(cast(src.[folder] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ispgp] AS varchar(8000)), '-') + '|' + isnull(cast(src.[expectedfilecount] AS varchar(8000)), '-') + '|' + isnull(cast(src.[expectedfilesize] AS varchar(8000)), '-') + '|' + isnull(cast(src.[bk_schedule_fileexpected] AS varchar(8000)), '-') + '|' + isnull(cast(src.[dateinfilenameformat] AS varchar(8000)), '-') + '|' + isnull(cast(src.[dateinfilenamelength] AS varchar(8000)), '-') + '|' + isnull(cast(src.[dateinfilenamestartpos] AS varchar(8000)), '-') + '|' + isnull(cast(src.[dateinfilenameexpression] AS varchar(8000)), '-') + '|' + isnull(cast(src.[testdateinfilename] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_name] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_fileformat] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_columndelimiter] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_rowdelimiter] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_quotecharacter] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_compressionlevel] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_compressiontype] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_enablecdc] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_escapecharacter] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_fileencoding] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_firstrow] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_firstrowasheader] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_filesize] AS varchar(8000)), '-') + '|' + isnull(cast(src.[ff_threshold] AS varchar(8000)), '-')))),2) THEN 0

            ELSE -99

             END INTO # 110_fileproperties_010_datasetsrc

  FROM [bld].[tr_110_fileproperties_010_datasetsrc] src

  LEFT JOIN [bld].[vw_fileproperties] tgt
    ON src.[bk] = tgt.[bk]
CREATE clustered INDEX [ix_tr_110_fileproperties_010_datasetsrc]
    ON # 110_fileproperties_010_datasetsrc([mta_bkh] ASC, [mta_rh] ASC) --------------------- start loading data
 PRINT '-- new records:'

   SET @startdatetime = getdate()
INSERT INTO [bld].[fileproperties] ([bk], [code], [description], [filemask], [filename], [filesystem], [folder], [ispgp], [expectedfilecount], [expectedfilesize], [bk_schedule_fileexpected], [dateinfilenameformat], [dateinfilenamelength], [dateinfilenamestartpos], [dateinfilenameexpression], [testdateinfilename], [ff_name], [ff_fileformat], [ff_columndelimiter], [ff_rowdelimiter], [ff_quotecharacter], [ff_compressionlevel], [ff_compressiontype], [ff_enablecdc], [ff_escapecharacter], [ff_fileencoding], [ff_firstrow], [ff_firstrowasheader], [ff_filesize], [ff_threshold] , [mta_bk], [mta_bkh], [mta_rh], [mta_source], [mta_rectype])
SELECT src.[bk],

       src.[code],

       src.[description],

       src.[filemask],

       src.[filename],

       src.[filesystem],

       src.[folder],

       src.[ispgp],

       src.[expectedfilecount],

       src.[expectedfilesize],

       src.[bk_schedule_fileexpected],

       src.[dateinfilenameformat],

       src.[dateinfilenamelength],

       src.[dateinfilenamestartpos],

       src.[dateinfilenameexpression],

       src.[testdateinfilename],

       src.[ff_name],

       src.[ff_fileformat],

       src.[ff_columndelimiter],

       src.[ff_rowdelimiter],

       src.[ff_quotecharacter],

       src.[ff_compressionlevel],

       src.[ff_compressiontype],

       src.[ff_enablecdc],

       src.[ff_escapecharacter],

       src.[ff_fileencoding],

       src.[ff_firstrow],

       src.[ff_firstrowasheader],

       src.[ff_filesize],

       src.[ff_threshold] ,

       h.[mta_bk],

       h.[mta_bkh],

       h.[mta_rh],

       h.[mta_source],

       h.[mta_rectype]

  FROM [bld].[tr_110_fileproperties_010_datasetsrc] src

  JOIN # 110_fileproperties_010_datasetsrc h
    ON h.[mta_bk] = src.[bk]

  LEFT JOIN [bld].[vw_fileproperties] tgt
    ON h.[mta_bkh] = tgt.[mta_bkh]

 WHERE 1 = 1

   AND cast(h.mta_rectype AS int) = 1

   AND tgt.[mta_bkh] IS NULL

   SET @enddatetime = getutcdate() EXEC [aud].[proc_log_procedure] @logaction = 'INSERT - NEW',

       @lognote = 'New Records',

       @logprocedure = @routinename,

       @logsql = 'Insert Into [bld].[FileProperties]',

       @logrowcount = @@ rowcount,

       @log_timestart = @startdatetime,

       @log_timeend = @enddatetime; PRINT '-- changed records:'

   SET @startdatetime = getdate()
  INSERT INTO [bld].[fileproperties] ([bk], [code], [description], [filemask], [filename], [filesystem], [folder], [ispgp], [expectedfilecount], [expectedfilesize], [bk_schedule_fileexpected], [dateinfilenameformat], [dateinfilenamelength], [dateinfilenamestartpos], [dateinfilenameexpression], [testdateinfilename], [ff_name], [ff_fileformat], [ff_columndelimiter], [ff_rowdelimiter], [ff_quotecharacter], [ff_compressionlevel], [ff_compressiontype], [ff_enablecdc], [ff_escapecharacter], [ff_fileencoding], [ff_firstrow], [ff_firstrowasheader], [ff_filesize], [ff_threshold] , [mta_bk], [mta_bkh], [mta_rh], [mta_source], [mta_rectype])
SELECT src.[bk],

       src.[code],

       src.[description],

       src.[filemask],

       src.[filename],

       src.[filesystem],

       src.[folder],

       src.[ispgp],

       src.[expectedfilecount],

       src.[expectedfilesize],

       src.[bk_schedule_fileexpected],

       src.[dateinfilenameformat],

       src.[dateinfilenamelength],

       src.[dateinfilenamestartpos],

       src.[dateinfilenameexpression],

       src.[testdateinfilename],

       src.[ff_name],

       src.[ff_fileformat],

       src.[ff_columndelimiter],

       src.[ff_rowdelimiter],

       src.[ff_quotecharacter],

       src.[ff_compressionlevel],

       src.[ff_compressiontype],

       src.[ff_enablecdc],

       src.[ff_escapecharacter],

       src.[ff_fileencoding],

       src.[ff_firstrow],

       src.[ff_firstrowasheader],

       src.[ff_filesize],

       src.[ff_threshold] ,

       h.[mta_bk],

       h.[mta_bkh],

       h.[mta_rh],

       h.[mta_source],

       h.[mta_rectype]

  FROM [bld].[tr_110_fileproperties_010_datasetsrc] src

  JOIN # 110_fileproperties_010_datasetsrc h
    ON h.[mta_bk] = src.[bk]

 WHERE 1 = 1

   AND cast(h.mta_rectype AS int) = 0

   SET @enddatetime = getutcdate() EXEC [aud].[proc_log_procedure] @logaction = 'INSERT - CHG',

       @lognote = 'Changed Records',

       @logprocedure = @routinename,

       @logsql = 'Insert Into [bld].[FileProperties]',

       @logrowcount = @@ rowcount,

       @log_timestart = @startdatetime,

       @log_timeend = @enddatetime; PRINT '-- deleted records:'

   SET @startdatetime = getdate()
  INSERT INTO [bld].[fileproperties] ([bk], [code], [description], [filemask], [filename], [filesystem], [folder], [ispgp], [expectedfilecount], [expectedfilesize], [bk_schedule_fileexpected], [dateinfilenameformat], [dateinfilenamelength], [dateinfilenamestartpos], [dateinfilenameexpression], [testdateinfilename], [ff_name], [ff_fileformat], [ff_columndelimiter], [ff_rowdelimiter], [ff_quotecharacter], [ff_compressionlevel], [ff_compressiontype], [ff_enablecdc], [ff_escapecharacter], [ff_fileencoding], [ff_firstrow], [ff_firstrowasheader], [ff_filesize], [ff_threshold] , [mta_bk], [mta_bkh], [mta_rh], [mta_source], [mta_rectype])
SELECT src.[bk],

       src.[code],

       src.[description],

       src.[filemask],

       src.[filename],

       src.[filesystem],

       src.[folder],

       src.[ispgp],

       src.[expectedfilecount],

       src.[expectedfilesize],

       src.[bk_schedule_fileexpected],

       src.[dateinfilenameformat],

       src.[dateinfilenamelength],

       src.[dateinfilenamestartpos],

       src.[dateinfilenameexpression],

       src.[testdateinfilename],

       src.[ff_name],

       src.[ff_fileformat],

       src.[ff_columndelimiter],

       src.[ff_rowdelimiter],

       src.[ff_quotecharacter],

       src.[ff_compressionlevel],

       src.[ff_compressiontype],

       src.[ff_enablecdc],

       src.[ff_escapecharacter],

       src.[ff_fileencoding],

       src.[ff_firstrow],

       src.[ff_firstrowasheader],

       src.[ff_filesize],

       src.[ff_threshold] ,

       src.[mta_bk],

       src.[mta_bkh],

       src.[mta_rh],

       src.[mta_source],

       [mta_rectype] = -1

  FROM [bld].[vw_fileproperties] src

  LEFT JOIN # 110_fileproperties_010_datasetsrc h
    ON h.[mta_bkh] = src.[mta_bkh]

   AND h.[mta_source] = src.[mta_source]

 WHERE 1 = 1

   AND h.[mta_bkh] IS NULL

   AND src.mta_source = '[bld].[tr_110_FileProperties_010_DatasetSrc]'

   SET @enddatetime = getutcdate() EXEC [aud].[proc_log_procedure] @logaction = 'INSERT - DEL',

       @lognote = 'Changed Deleted',

       @logprocedure = @routinename,

       @logsql = 'Insert Into [bld].[FileProperties]',

       @logrowcount = @@ rowcount,

       @log_timestart = @startdatetime,

       @log_timeend = @enddatetime ; -- Clean up ...
 IF object_id('tempdb..#110_FileProperties_010_DatasetSrc') IS NOT NULL
  DROP TABLE # 110_fileproperties_010_datasetsrc;

   SET @enddatetime = getutcdate()

   SET @duration = datediff(ss, @startdatetime, @enddatetime) PRINT 'Load "load_110_FileProperties_010_DatasetSrc" took ' + cast(@duration AS varchar(10)) + ' second(s)'
