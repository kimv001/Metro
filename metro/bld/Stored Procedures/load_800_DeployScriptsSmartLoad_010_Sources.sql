
	CREATE PROC [bld].[load_800_DeployScriptsSmartLoad_010_Sources] AS
	/*
	Proc is generated by	: metro
	Generated at			: 2025-01-21 08:32:56
	
	exec [bld].[load_800_DeployScriptsSmartLoad_010_Sources]*/

	
	DECLARE @RoutineName	varchar(8000)	= 'load_800_DeployScriptsSmartLoad_010_Sources'
	DECLARE @StartDateTime	datetime2		=  getutcdate()
	DECLARE @EndDateTime	datetime2		
	DECLARE @Duration		bigint



	-- Create a helper temp table
	IF OBJECT_ID('tempdb..#800_DeployScriptsSmartLoad_010_Sources') IS NOT NULL 
	DROP TABLE #800_DeployScriptsSmartLoad_010_Sources ;
	PRINT '-- create temp table:'
	SELECT
	  mta_BK		= src.[BK]
	, mta_BKH		= CONVERT(char(64),(Hashbytes('sha2_512',upper(src.BK) )),2)
	, mta_RH		= CONVERT(char(64),(Hashbytes('sha2_512',upper(
								ISNULL(CAST(src.[BK] AS varchar(8000)),'-')
								+'|'
								+ISNULL(CAST(src.[BK_Dataset] AS varchar(8000)),'-')
								+'|'
								+ISNULL(CAST(src.[Code] AS varchar(8000)),'-')
								+'|'
								+ISNULL(CAST(src.[SrcCreateDate] AS varchar(8000)),'-')
								+'|'
								+ISNULL(CAST(src.[TgtCreateDate] AS varchar(8000)),'-')
								+'|'
								+ISNULL(CAST(src.[IsUpdated] AS varchar(8000)),'-')
								+'|'
								+ISNULL(CAST(src.[RecType] AS varchar(8000)),'-') 
							))),2)
	, mta_Source	= '[bld].[tr_800_DeployScriptsSmartLoad_010_Sources]'
	, mta_RecType	= CASE 
												WHEN tgt.[BK] IS null THEN 1
												WHEN
												    tgt.[mta_RH]
												    !=  CONVERT(
												        char(64),
												        (
												            Hashbytes(
												                'sha2_512',
												                upper(
												                    ISNULL(CAST(src.[BK] AS varchar(8000)),'-')
												                    +'|'
												                    +ISNULL(CAST(src.[BK_Dataset] AS varchar(8000)),'-')
												                    +'|'
												                    +ISNULL(CAST(src.[Code] AS varchar(8000)),'-')
												                    +'|'
												                    +ISNULL(CAST(src.[SrcCreateDate] AS varchar(8000)),'-')
												                    +'|'
												                    +ISNULL(CAST(src.[TgtCreateDate] AS varchar(8000)),'-')
												                    +'|'
												                    +ISNULL(CAST(src.[IsUpdated] AS varchar(8000)),'-')
												                    +'|'
												                    +ISNULL(CAST(src.[RecType] AS varchar(8000)),'-')
												                )
												            )
												        ),
												        2
												    )
						THEN 0
						ELSE -99 END
	
	INTO #800_DeployScriptsSmartLoad_010_Sources
	FROM [bld].[tr_800_DeployScriptsSmartLoad_010_Sources] src
	LEFT JOIN [bld].[vw_DeployScriptsSmartLoad] tgt ON src.[BK] = tgt.[BK]
	
	
	
	CREATE CLUSTERED INDEX [IX_tr_800_DeployScriptsSmartLoad_010_Sources] ON #800_DeployScriptsSmartLoad_010_Sources( [mta_BKH] ASC,[mta_RH] ASC)
	
	
	--------------------- start loading data
	
	PRINT '-- new records:'
	
	SET @StartDateTime = getdate()
	
	INSERT INTO [bld].[DeployScriptsSmartLoad]
	( 
		[BK] ,[BK_Dataset] ,[Code] ,[SrcCreateDate] ,[TgtCreateDate] ,[IsUpdated] ,[RecType] 
		, [mta_BK], [mta_BKH], [mta_RH], [mta_Source], [mta_RecType]) 
	SELECT 
		src.[BK] ,src.[BK_Dataset] ,src.[Code] ,src.[SrcCreateDate] ,src.[TgtCreateDate] ,src.[IsUpdated] ,src.[RecType] 
		, h.[mta_BK], h.[mta_BKH], h.[mta_RH], h.[mta_Source], h.[mta_RecType]
	FROM  [bld].[tr_800_DeployScriptsSmartLoad_010_Sources] src
	JOIN #800_DeployScriptsSmartLoad_010_Sources h ON h.[mta_BK] = src.[BK]
	LEFT JOIN [bld].[vw_DeployScriptsSmartLoad] tgt ON h.[mta_BKH] = tgt.[mta_BKH] 
	WHERE 1=1 AND CAST(h.mta_RecType AS int) = 1 AND tgt.[mta_BKH] IS null
	
	
	SET @EndDateTime = getutcdate()
	EXEC [aud].[proc_Log_Procedure]  
							@LogAction		= 'INSERT - NEW', 
							@LogNote		= 'New Records',
							@LogProcedure	= @RoutineName,
							@LogSQL			= 'Insert Into [bld].[DeployScriptsSmartLoad]',
							@LogRowCount	= @@ROWCOUNT,
							@Log_TimeStart  = @StartDateTime,
							@Log_TimeEnd    = @EndDateTime;
	
	PRINT '-- changed records:'
	SET @StartDateTime = getdate()
	
		INSERT INTO [bld].[DeployScriptsSmartLoad]
	( 
		[BK] ,[BK_Dataset] ,[Code] ,[SrcCreateDate] ,[TgtCreateDate] ,[IsUpdated] ,[RecType] 
		, [mta_BK], [mta_BKH], [mta_RH], [mta_Source], [mta_RecType]) 
	SELECT 
		src.[BK] ,src.[BK_Dataset] ,src.[Code] ,src.[SrcCreateDate] ,src.[TgtCreateDate] ,src.[IsUpdated] ,src.[RecType] 
		, h.[mta_BK], h.[mta_BKH], h.[mta_RH], h.[mta_Source], h.[mta_RecType]
	FROM  [bld].[tr_800_DeployScriptsSmartLoad_010_Sources] src
	JOIN #800_DeployScriptsSmartLoad_010_Sources h ON h.[mta_BK] = src.[BK]
	WHERE 1=1 AND CAST(h.mta_RecType AS int) = 0

	
	SET @EndDateTime = getutcdate()
	EXEC [aud].[proc_Log_Procedure]  
												@LogAction		= 'INSERT - CHG', 
												@LogNote		= 'Changed Records',
												@LogProcedure	= @RoutineName,
												@LogSQL			= 'Insert Into [bld].[DeployScriptsSmartLoad]',
												@LogRowCount	= @@ROWCOUNT,
												@Log_TimeStart  = @StartDateTime,
												@Log_TimeEnd    = @EndDateTime;
	
	PRINT '-- deleted records:'
	
	SET @StartDateTime = getdate()
	
	INSERT INTO [bld].[DeployScriptsSmartLoad]
	
	( 
	
		[BK] ,[BK_Dataset] ,[Code] ,[SrcCreateDate] ,[TgtCreateDate] ,[IsUpdated] ,[RecType] 
		, [mta_BK], [mta_BKH], [mta_RH], [mta_Source], [mta_RecType]) 
	SELECT 
		src.[BK] ,src.[BK_Dataset] ,src.[Code] ,src.[SrcCreateDate] ,src.[TgtCreateDate] ,src.[IsUpdated] ,src.[RecType] 
		, src.[mta_BK], src.[mta_BKH], src.[mta_RH], src.[mta_Source], [mta_RecType] = -1
	FROM  [bld].[vw_DeployScriptsSmartLoad] src
	LEFT JOIN #800_DeployScriptsSmartLoad_010_Sources h ON h.[mta_BKH] = src.[mta_BKH] AND h.[mta_Source] = src.[mta_Source]
	WHERE 1=1 AND h.[mta_BKH] IS null AND  src.mta_Source = '[bld].[tr_800_DeployScriptsSmartLoad_010_Sources]'
	
	
	SET @EndDateTime = getutcdate()
	EXEC [aud].[proc_Log_Procedure]  
												@LogAction		= 'INSERT - DEL', 
												@LogNote		= 'Changed Deleted',
												@LogProcedure	= @RoutineName,
												@LogSQL			= 'Insert Into [bld].[DeployScriptsSmartLoad]',
												@LogRowCount	= @@ROWCOUNT,
												@Log_TimeStart  = @StartDateTime,
												@Log_TimeEnd    = @EndDateTime
												;
	
	-- Clean up ...
	IF OBJECT_ID('tempdb..#800_DeployScriptsSmartLoad_010_Sources') IS NOT NULL 
DROP TABLE #800_DeployScriptsSmartLoad_010_Sources;
	
	SET @EndDateTime =  getutcdate()
	SET @Duration = datediff(SS,@StartDateTime, @EndDateTime)
	PRINT 'Load "load_800_DeployScriptsSmartLoad_010_Sources" took ' +CAST(@Duration AS varchar(10))+ ' second(s)'