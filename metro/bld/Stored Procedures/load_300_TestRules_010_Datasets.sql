
CREATE proc [bld].[load_300_testrules_010_datasets] AS /*
	Proc is generated by	: metro
	Generated at			: 2025-01-06 14:43:27

	exec [bld].[load_300_TestRules_010_Datasets]*/  DECLARE @routinename varchar(8000) = 'load_300_TestRules_010_Datasets' DECLARE @startdatetime datetime2 = getutcdate() DECLARE @enddatetime datetime2 DECLARE @duration bigint -- Create a helper temp table
 IF object_id('tempdb..#300_TestRules_010_Datasets') IS NOT NULL
DROP TABLE # 300_testrules_010_datasets ; PRINT '-- create temp table:'
SELECT mta_bk = src.[bk] ,

       mta_bkh = convert(char(64),(hashbytes('sha2_512', upper(src.bk))),2) ,

       mta_rh = convert(char(64),(hashbytes('sha2_512', upper(isnull(cast(src.[code] AS varchar(8000)), '-') + '|' + isnull(cast(src.[bk] AS varchar(8000)), '-') + '|' + isnull(cast(src.[bk_dataset] AS varchar(8000)), '-') + '|' + isnull(cast(src.[bk_reftype_repositorystatus] AS varchar(8000)), '-') + '|' + isnull(cast(src.[testdefintion] AS varchar(8000)), '-') + '|' + isnull(cast(src.[adfpipeline] AS varchar(8000)), '-') + '|' + isnull(cast(src.[getattributes] AS varchar(8000)), '-') + '|' + isnull(cast(src.[tresholdvalue] AS varchar(8000)), '-') + '|' + isnull(cast(src.[specificattribute] AS varchar(8000)), '-') + '|' + isnull(cast(src.[attributename] AS varchar(8000)), '-') + '|' + isnull(cast(src.[expectedvalue] AS varchar(8000)), '-')))),2) ,

       mta_source = '[bld].[tr_300_TestRules_010_Datasets]' ,

       mta_rectype = CASE
                         WHEN tgt.[bk

            WHEN tgt.[mta_rh] != convert(char(64),(hashbytes('sha2_512', upper(isnull(cast(src.[code] AS varchar(8000)), '-') + '|' + isnull(cast(src.[bk] AS varchar(8000)), '-') + '|' + isnull(cast(src.[bk_dataset] AS varchar(8000)), '-') + '|' + isnull(cast(src.[bk_reftype_repositorystatus] AS varchar(8000)), '-') + '|' + isnull(cast(src.[testdefintion] AS varchar(8000)), '-') + '|' + isnull(cast(src.[adfpipeline] AS varchar(8000)), '-') + '|' + isnull(cast(src.[getattributes] AS varchar(8000)), '-') + '|' + isnull(cast(src.[tresholdvalue] AS varchar(8000)), '-') + '|' + isnull(cast(src.[specificattribute] AS varchar(8000)), '-') + '|' + isnull(cast(src.[attributename] AS varchar(8000)), '-') + '|' + isnull(cast(src.[expectedvalue] AS varchar(8000)), '-')))),2) THEN 0

            ELSE -99

             END INTO # 300_testrules_010_datasets

  FROM [bld].[tr_300_testrules_010_datasets] src

  LEFT JOIN [bld].[vw_testrules] tgt
    ON src.[bk] = tgt.[bk]
CREATE clustered INDEX [ix_tr_300_testrules_010_datasets]
    ON # 300_testrules_010_datasets([mta_bkh] ASC, [mta_rh] ASC) --------------------- start loading data
 PRINT '-- new records:'

   SET @startdatetime = getdate()
INSERT INTO [bld].[testrules] ([code], [bk], [bk_dataset], [bk_reftype_repositorystatus], [testdefintion], [adfpipeline], [getattributes], [tresholdvalue], [specificattribute], [attributename], [expectedvalue] , [mta_bk], [mta_bkh], [mta_rh], [mta_source], [mta_rectype])
SELECT src.[code],

       src.[bk],

       src.[bk_dataset],

       src.[bk_reftype_repositorystatus],

       src.[testdefintion],

       src.[adfpipeline],

       src.[getattributes],

       src.[tresholdvalue],

       src.[specificattribute],

       src.[attributename],

       src.[expectedvalue] ,

       h.[mta_bk],

       h.[mta_bkh],

       h.[mta_rh],

       h.[mta_source],

       h.[mta_rectype]

  FROM [bld].[tr_300_testrules_010_datasets] src

  JOIN # 300_testrules_010_datasets h
    ON h.[mta_bk] = src.[bk]

  LEFT JOIN [bld].[vw_testrules] tgt
    ON h.[mta_bkh] = tgt.[mta_bkh]

 WHERE 1 = 1

   AND cast(h.mta_rectype AS int) = 1

   AND tgt.[mta_bkh] IS NULL

   SET @enddatetime = getutcdate() EXEC [aud].[proc_log_procedure] @logaction = 'INSERT - NEW',

       @lognote = 'New Records',

       @logprocedure = @routinename,

       @logsql = 'Insert Into [bld].[TestRules]',

       @logrowcount = @@ rowcount,

       @log_timestart = @startdatetime,

       @log_timeend = @enddatetime; PRINT '-- changed records:'

   SET @startdatetime = getdate()
  INSERT INTO [bld].[testrules] ([code], [bk], [bk_dataset], [bk_reftype_repositorystatus], [testdefintion], [adfpipeline], [getattributes], [tresholdvalue], [specificattribute], [attributename], [expectedvalue] , [mta_bk], [mta_bkh], [mta_rh], [mta_source], [mta_rectype])
SELECT src.[code],

       src.[bk],

       src.[bk_dataset],

       src.[bk_reftype_repositorystatus],

       src.[testdefintion],

       src.[adfpipeline],

       src.[getattributes],

       src.[tresholdvalue],

       src.[specificattribute],

       src.[attributename],

       src.[expectedvalue] ,

       h.[mta_bk],

       h.[mta_bkh],

       h.[mta_rh],

       h.[mta_source],

       h.[mta_rectype]

  FROM [bld].[tr_300_testrules_010_datasets] src

  JOIN # 300_testrules_010_datasets h
    ON h.[mta_bk] = src.[bk]

 WHERE 1 = 1

   AND cast(h.mta_rectype AS int) = 0

   SET @enddatetime = getutcdate() EXEC [aud].[proc_log_procedure] @logaction = 'INSERT - CHG',

       @lognote = 'Changed Records',

       @logprocedure = @routinename,

       @logsql = 'Insert Into [bld].[TestRules]',

       @logrowcount = @@ rowcount,

       @log_timestart = @startdatetime,

       @log_timeend = @enddatetime; PRINT '-- deleted records:'

   SET @startdatetime = getdate()
  INSERT INTO [bld].[testrules] ([code], [bk], [bk_dataset], [bk_reftype_repositorystatus], [testdefintion], [adfpipeline], [getattributes], [tresholdvalue], [specificattribute], [attributename], [expectedvalue] , [mta_bk], [mta_bkh], [mta_rh], [mta_source], [mta_rectype])
SELECT src.[code],

       src.[bk],

       src.[bk_dataset],

       src.[bk_reftype_repositorystatus],

       src.[testdefintion],

       src.[adfpipeline],

       src.[getattributes],

       src.[tresholdvalue],

       src.[specificattribute],

       src.[attributename],

       src.[expectedvalue] ,

       src.[mta_bk],

       src.[mta_bkh],

       src.[mta_rh],

       src.[mta_source],

       [mta_rectype] = -1

  FROM [bld].[vw_testrules] src

  LEFT JOIN # 300_testrules_010_datasets h
    ON h.[mta_bkh] = src.[mta_bkh]

   AND h.[mta_source] = src.[mta_source]

 WHERE 1 = 1

   AND h.[mta_bkh] IS NULL

   AND src.mta_source = '[bld].[tr_300_TestRules_010_Datasets]'

   SET @enddatetime = getutcdate() EXEC [aud].[proc_log_procedure] @logaction = 'INSERT - DEL',

       @lognote = 'Changed Deleted',

       @logprocedure = @routinename,

       @logsql = 'Insert Into [bld].[TestRules]',

       @logrowcount = @@ rowcount,

       @log_timestart = @startdatetime,

       @log_timeend = @enddatetime ; -- Clean up ...
 IF object_id('tempdb..#300_TestRules_010_Datasets') IS NOT NULL
  DROP TABLE # 300_testrules_010_datasets;

   SET @enddatetime = getutcdate()

   SET @duration = datediff(ss, @startdatetime, @enddatetime) PRINT 'Load "load_300_TestRules_010_Datasets" took ' + cast(@duration AS varchar(10)) + ' second(s)'
